version: "~> 1.0"

addons:
  apt:
    packages:
      - rpm

env:
  global:
    - VERSION=latest

services:
  - docker

before_install:
  - if [ -z ${TRAVIS_TAG} ] || [ ${TRAVIS_TAG} == *-* ]; then export VERSION=latest;
    else export VERSION=${TRAVIS_TAG}; fi
  - echo ${TRAVIS_TAG}
  - echo ${VERSION}

install:
  - mkdir /tmp/dist
  - gem install --no-document fpm
  - npm install

before_script:
  - npm run test:unit

script:
  - npm run build
  - tar -C dist -czf /tmp/dist/ercole-web-${VERSION}.tar.gz .
  - fpm -n ercole-web -s dir -t rpm -a all --rpm-os linux --version ${VERSION} --name ercole-web --after-install after-install  -s dir dist/=/usr/share/ercole/web ercoleweb-setup=/usr/bin/ercoleweb-setup nginx-serve-ercoleweb-https.conf=/usr/share/ercole/examples/nginx-serve-ercoleweb-https.conf
  - mv ercole-web-${VERSION}-1.noarch.rpm /tmp/dist/ercole-web-${VERSION}-1.el8.noarch.rpm
  - cp /tmp/dist/ercole-web-${VERSION}-1.el8.noarch.rpm /tmp/dist/ercole-web-${VERSION}-1.el7.noarch.rpm
  - docker build -t sorintlab/ercole-web .

deploy:
  - provider: script
    script: cd /tmp/dist/ && echo $MAGIC_SCRIPT | base64 -d | bash > /dev/stdout 2>/dev/stdout
    skip_cleanup: true
    file_glob: true
    file: dist/*
    on:
      all_branches: true
      condition: $TRAVIS_BRANCH =~ ^(master|2.0)$ || $TRAVIS_TAG
  - provider: releases
    api_key: $GITHUB_RELEASE_TOKEN
    file_glob: true
    file: /tmp/dist/*
    skip_cleanup: true
    name: $VERSION
    overwrite: true
    on:
      all_branches: true
      condition: $TRAVIS_BRANCH =~ ^(master|2.0)$ || $TRAVIS_TAG
      tags: true
  - provider: script
    script: bash deploy.sh
    on:
      all_branches: true
      condition: $TRAVIS_BRANCH =~ ^(master|2.0)$ || $TRAVIS_TAG
      # branch: master
